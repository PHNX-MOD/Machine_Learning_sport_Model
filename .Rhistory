print("hello")
install.packages("RPostgreSQL")
library(RPostgreSQL)
library(RPostgreSQL)
con <- dbConnect(
PostgreSQL(),
dbname = "p:crona",
host = "https://sqliteonline.com/",
port = your_database_port,
user = "modith.hadya@gmail.com",
password = "madonaOFrocks0345#"
)
install.packages("RSQLite")
library(RSQLite)
url <- "https://sqliteonline.com/#sharecon=ut"
con <- dbConnect(RSQLite::SQLite(), url)
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://sqliteonline.com/#sharecon=ut"
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://sqliteonline.com/#sharecon=ut"
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://sqliteonline.com/#sharecon=ut"
con <- dbConnect(RSQLite::SQLite(), url)
con <- dbConnect(SQLite(), dbname = "https://sqliteonline.com/#sharecon=ut")
url <- "https://github.com/PHNX-MOD/sqliteDB/blob/main/dump.sqlite.sql"
con <- dbConnect(RSQLite::SQLite(), url)
con <- dbConnect(RSQLite::SQLite(), "mydatabase.db")
url <- "https://github.com/PHNX-MOD/sqliteDB/blob/main/mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), url)
library(DBI)
library(RSQLite)
library(RSQLite)
url <- "https://github.com/PHNX-MOD/sqliteDB/blob/main/mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://raw.githubusercontent.com/PHNX-MOD/sqliteDB/main/mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://raw.githubusercontent.com/PHNX-MOD/sqliteDB/blob/main/mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://raw.githubusercontent.com/PHNX-MOD/sqliteDB/main/mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), url)
url <- "https://raw.githubusercontent.com/PHNX-MOD/sqliteDB/main/mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), url)
library(DBI)
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), "mydatabase.db")
con <- dbConnect(RSQLite::SQLite(), "dump.sqlite.sql")
query <- "SELECT * FROM demo;"
result <- dbGetQuery(con, query)
query <- "SELECT * FROM demo"
result <- dbGetQuery(con, query)
con <- dbConnect(RSQLite::SQLite(), db_path)
db_path <- normalizePath("dump.sqlite.sql")
con <- dbConnect(RSQLite::SQLite(), db_path)
sqlite3 mydatabase.db < dump.sqlite.sql
cwd
cwd()
pwd()
lis.files()
list.files()
setwd("~/sb_csv")
list.files()
csv_files <- c("cbb.csv"  , "cbb13.csv", "cbb14.csv", "cbb15.csv"
"cbb16.csv", "cbb17.csv" ,"cbb18.csv", "cbb19.csv"
db_path <- "mydatabase.db"
con <- dbConnect(RSQLite::SQLite(), db_path)
for (csv_file in csv_files) {
table_name <- tools::file_path_sans_ext(basename(csv_file))  # Use file name as table name
data <- read.csv(csv_file)
dbWriteTable(con, table_name, data)
}
csv_files <- c("cbb.csv"  , "cbb13.csv", "cbb14.csv", "cbb15.csv"
"cbb16.csv", "cbb17.csv" ,"cbb18.csv", "cbb19.csv"
for (csv_file in csv_files) {
table_name <- tools::file_path_sans_ext(basename(csv_file))  # Use file name as table name
data <- read.csv(csv_file)
dbWriteTable(con, table_name, data)
}
csv_files <- c("cbb.csv", "cbb13.csv", "cbb14.csv", "cbb15.csv",
"cbb16.csv", "cbb17.csv" ,"cbb18.csv", "cbb19.csv",
"cbb20.csv" ,"cbb21.csv", "cbb22.csv" ,"cbb23.csv")
for (csv_file in csv_files) {
table_name <- tools::file_path_sans_ext(basename(csv_file))  # Use file name as table name
data <- read.csv(csv_file)
dbWriteTable(con, table_name, data)
}
dbDisconnect(con)
con <- dbConnect(RSQLite::SQLite(), "mydatabase.db")
result <- dbGetQuery(con, "SELECT * FROM cbb")
result
dbDisconnect(con)
setwd("~/")
setwd("~/Regression_SB")
git committ -a
git commit -a
